buildscript {
    repositories {
        mavenCentral()
        jcenter()
        gradlePluginPortal()
    }

    ext {
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE"
        classpath "com.bmuschko:gradle-docker-plugin:6.0.0"
        classpath 'cz.alenkacz.gradle:json-validator:1.1.1'
        classpath 'com.ofg:uptodate-gradle-plugin:1.6.3'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'groovy'
    id 'idea'
    id 'eclipse'
    id 'net.saliman.cobertura' version '3.0.0'
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id 'io.freefair.lombok' version '3.7.5'
    id 'com.bmuschko.docker-spring-boot-application' version '6.0.0'
    id 'jacoco'
    id "cz.alenkacz.gradle.jsonvalidator" version "1.2.1"
    id "com.ofg.uptodate" version "1.6.3"

}

group = 'com.jvm-bloggers'
version = '2.0.0'
sourceCompatibility = '12'

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

ext {
    wicketVersion = '8.6.1'
    akkaVersion = '2.5.7'
    scalaVersion = '2.11'
    jacksonVersion = '2.29.1'
}

dependencies {
    // Spring Boot stuff
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot:1.16'
    implementation 'org.springframework.boot:spring-boot-devtools'
    runtime 'org.springframework.boot:spring-boot-properties-migrator'


    // Logic
    implementation "com.typesafe.akka:akka-actor_$scalaVersion:$akkaVersion"
    implementation "com.typesafe.akka:akka-slf4j_$scalaVersion:$akkaVersion"
    implementation 'com.rometools:rome:1.9.0'

    // Facebook
    implementation 'com.restfb:restfb:1.49.0'

    // Twitter
    implementation 'org.twitter4j:twitter4j-core:4.0.6'

    // View
    implementation 'com.giffing.wicket.spring.boot.starter:wicket-spring-boot-starter:2.1.9'
    implementation "org.apache.wicket:wicket-devutils:$wicketVersion"
    implementation "org.apache.wicket:wicket-auth-roles:$wicketVersion"
    implementation "com.googlecode.wicket-jquery-ui:wicket-jquery-ui:8.6.0"
    implementation "com.googlecode.wicket-jquery-ui:wicket-jquery-ui-plugins:8.6.0"
    implementation "org.wicketstuff:wicketstuff-annotation:8.6.0"
    implementation "org.apache.wicket:wicket-bean-validation:$wicketVersion"
    implementation 'de.agilecoders.wicket.webjars:wicket-webjars:2.0.16'
    implementation 'org.webjars:jquery:2.2.4'

    implementation 'org.webjars:webjars-locator:0.32-1'
    implementation 'org.webjars:startbootstrap-sb-admin-2:3.3.7+1'
    implementation 'org.webjars:html5shiv:3.7.3-1'
    implementation 'org.webjars:respond:1.4.2-1'


    // Utils and helpers
    implementation 'org.projectlombok:lombok:1.18.8'
    implementation 'com.google.guava:guava:23.5-jre'
    implementation 'org.apache.commons:commons-lang3:3.7'
    implementation 'org.apache.commons:commons-text:1.1'
    implementation 'org.antlr:ST4:4.0.8'
    implementation "org.glassfish.jersey.core:jersey-client:$jacksonVersion"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:$jacksonVersion"
    implementation 'net.jcip:jcip-annotations:1.0'
    implementation 'org.objenesis:objenesis:2.6'
    implementation 'commons-validator:commons-validator:1.6'
    implementation 'io.vavr:vavr:0.9.3'
    implementation 'org.jsoup:jsoup:1.11.2'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.0'

    // Database related
    implementation 'org.postgresql:postgresql:42.1.4'
    implementation 'org.liquibase:liquibase-core:3.8.1'
    implementation 'com.mattbertolini:liquibase-slf4j:2.0.0'

//    implementation 'org.webjars.npm:ev-emitter:1.1.1'
//    implementation 'org.webjars.npm:fizzy-ui-utils:2.0.5'
//    implementation 'org.webjars.npm:infinite-scroll:3.0.0'

//    implementation 'org.webjars:toastr:2.1.2'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
    testImplementation 'org.springframework:spring-test'
    testImplementation 'com.jayway.jsonpath:json-path:2.4.0'
    testImplementation 'cglib:cglib-nodep:3.3.0'
    testImplementation 'org.codehaus.groovy:groovy:2.5.8'
    testImplementation "com.typesafe.akka:akka-testkit_$scalaVersion:$akkaVersion"
    runtime 'com.h2database:h2'

}

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

docker {
    dockerCreateDockerfile {
        instruction 'RUN apk update && apk add ca-certificates && update-ca-certificates && apk add openssl'
    }

    dockerBuildImage {
        images = [
            'jvmbloggers/jvm-bloggers:' + project.version +"-" + getTimestampWithGitHash(),
            'jvmbloggers/jvm-bloggers:latest',

        ]
    }

    registryCredentials {
//        url = 'https://registry-1.docker.io/v2/'
        username = 'jvmbloggers'
        password = 'qYparRay'
        email = "tdziurko at gmail dottt com"
    }

    springBootApplication {
        baseImage = 'adoptopenjdk/openjdk12:alpine-jre'
        maintainer = 'Tomasz Dziurko "tdziurko at gmail dottt com"'
        ports = [8080, 8080]
//
    }
}



bootRun {
    systemProperties = System.properties
}

test {
    systemProperty 'file.encoding', 'utf-8'
    dependsOn 'validateBlogsData'
}

uptodate {
    connectionTimeout 10000
}

String getTimestampWithGitHash() {
    String timeStamp = new Date().format('yyyyMMdd-HHmmss')
    String cmd = "git log --pretty=format:%h -n 1"
    def proc = cmd.execute()
    proc.waitFor()
    return timeStamp + '-' + proc.in.text
}

task validateBlogsData() {
    def blogsDir = 'src/main/resources/blogs'
    def blogsData = ['bloggers', 'videos', 'companies']
    blogsData.each { fileName ->
        def taskName = 'validate' + fileName.capitalize()
        tasks.create(taskName, cz.alenkacz.gradle.jsonvalidator.ValidateJsonTask) {
            jsonSchema = new File(blogsDir, 'schema.json')
            targetJsonFile = new File(blogsDir, "${fileName}.json")
        }
        dependsOn taskName
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

wrapper {
    gradleVersion '5.6.4'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceSets.main.resources.srcDir 'src/main/java'
