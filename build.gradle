buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath 'cz.alenkacz.gradle:json-validator:1.0.0'
        classpath 'com.ofg:uptodate-gradle-plugin:+'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'cz.alenkacz.gradle.jsonvalidator'
apply plugin: 'com.ofg.uptodate'

jar {
    baseName = 'jvm-bloggers'
    version = '1.10.0'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    wicketVersion = '8.0.0-M6'
    akkaVersion = '2.5.2'
    scalaVersion = "2.11"
    jacksonVersion = '2.25.1'
}

dependencies {
    // Spring Boot stuff
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'com.github.ulisesbocchio:jasypt-spring-boot:1.12'
    compile 'org.springframework.boot:spring-boot-devtools'

    // Logic
    compile "com.typesafe.akka:akka-actor_$scalaVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-slf4j_$scalaVersion:$akkaVersion"
    compile 'com.rometools:rome:1.7.3'

    // Facebook
    compile 'com.restfb:restfb:1.42.0'

    // View
    compile 'com.giffing.wicket.spring.boot.starter:wicket-spring-boot-starter:2.0.3'
    compile "org.apache.wicket:wicket-devutils:$wicketVersion"
    compile "org.apache.wicket:wicket-auth-roles:$wicketVersion"
    compile "com.googlecode.wicket-jquery-ui:wicket-jquery-ui:$wicketVersion"
    compile "com.googlecode.wicket-jquery-ui:wicket-jquery-ui-plugins:$wicketVersion"
    compile "org.wicketstuff:wicketstuff-annotation:$wicketVersion"
    compile "org.apache.wicket:wicket-bean-validation:$wicketVersion"
    compile "de.agilecoders.wicket.webjars:wicket-webjars:2.0.3"

    // Utils and helpers
    compile "org.projectlombok:lombok:1.16.16"
    compile 'com.google.guava:guava:22.0'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'org.antlr:ST4:4.0.8'
    compile "org.glassfish.jersey.core:jersey-client:$jacksonVersion"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jacksonVersion"
    compile 'net.jcip:jcip-annotations:1.0'
    compile 'org.objenesis:objenesis:2.5.1'
    compile 'commons-validator:commons-validator:1.6'
    compile 'net.ftlines.wicket-source:wicket-source:7.0.0'
    compile 'io.javaslang:javaslang:2.0.6'
    compile 'org.jsoup:jsoup:1.10.3'

    // Database related
    compile "org.postgresql:postgresql:9.4.1212"
    compile 'org.liquibase:liquibase-core:3.5.3'
    compile 'com.mattbertolini:liquibase-slf4j:2.0.0'

    compile 'org.webjars:webjars-locator:0.32-1'
    compile 'org.webjars:startbootstrap-sb-admin-2:3.3.7+1'
    compile 'org.webjars:html5shiv:3.7.3'
    compile 'org.webjars:respond:1.4.2'
    compile 'org.webjars.npm:ev-emitter:1.1.0'
    compile 'org.webjars.npm:fizzy-ui-utils:2.0.5'
    compile 'org.webjars.npm:infinite-scroll:3.0.0'

    // Test dependencies
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
    testCompile 'org.springframework:spring-test'
    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    testCompile 'cglib:cglib-nodep:3.2.5'
    testCompile 'org.codehaus.groovy:groovy:2.4.11'
    testCompile "com.typesafe.akka:akka-testkit_$scalaVersion:$akkaVersion"
    runtime 'com.h2database:h2'

}

checkstyle {
    toolVersion = "7.2"
}

jacoco {
    toolVersion = "0.7.7.201606060606"
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

tasks.coveralls {
    dependsOn 'check'
}

group = 'jvmbloggers'

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    tagVersion = jar.version + '-' + getTimestampWithGitHash()
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

bootRun {
    systemProperties = System.properties
}

test {
    systemProperty "file.encoding", "utf-8"
    dependsOn 'validateBlogsData'
}

uptodate {
    connectionTimeout 10000
}

check.dependsOn 'uptodate'

String getTimestampWithGitHash() {
    String timeStamp = new Date().format('yyyyMMdd-HHmmss')
    String cmd = "git log --pretty=format:%h -n 1"
    def proc = cmd.execute()
    proc.waitFor()
    return timeStamp + '-' + proc.in.text
}

task validateBlogsData() {
    def blogsDir = "src/main/resources/blogs"
    def blogsData = ["bloggers", "videos", "companies"]
    blogsData.each { fileName ->
        def taskName = "validate" + fileName.capitalize()
        tasks.create(taskName, cz.alenkacz.gradle.jsonvalidator.ValidateJsonTask) {
            jsonSchema = new File(blogsDir, "schema.json")
            targetJsonFile = new File(blogsDir, "${fileName}.json")
        }
        dependsOn taskName
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

wrapper {
    gradleVersion "3.1"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceSets.main.resources.srcDir 'src/main/java'
